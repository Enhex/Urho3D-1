os: linux
dist: trusty
compiler: gcc
language: cpp
sudo: false
cache:
  apt: true
  directories:
    - $HOME/cmake-3.3.2-Linux-x86_64/bin
    - $HOME/cmake-3.3.2-Linux-x86_64/share
git:
  submodules: false
env:
  global:
    - MAKEFLAGS=-j4
    - URHO3D_ENABLE_ALL=ON
notifications:
  email:
    on_success: never
    on_failure: never
branches:
  except:
    - /^(.*[^\w])?appveyor-.+$/
matrix:
  fast_finish: true
  include:
    - &Linux-64bit
      addons:
        apt:
          packages: &linux_packages_64bit
            - libasound2-dev
            - libxrandr-dev
            - libgl1-mesa-dev
            - libglu1-mesa-dev
    - <<: *Linux-64bit
      compiler: clang
    - <<: *Linux-64bit
      env: BUILD_SHARED_LIBS=ON
    - <<: *Linux-64bit
      compiler: clang
      env: BUILD_SHARED_LIBS=ON
    - &MingW-64bit
      env:
        CMAKE_TOOLCHAIN_FILE=CMake/Toolchains/MinGW.cmake
        CMAKE_SYSTEM_PROCESSOR=x86_64
        URHO3D_RENDERER=D3D9
      addons:
        apt:
          packages:
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - binutils-mingw-w64-x86-64
    - &MingW-32bit
      env:
        CMAKE_TOOLCHAIN_FILE=CMake/Toolchains/MinGW.cmake
        CMAKE_SYSTEM_PROCESSOR=i686
        URHO3D_RENDERER=D3D9
      addons:
        apt:
          packages:
            - gcc-mingw-w64-i686
            - g++-mingw-w64-i686
            - binutils-mingw-w64-i686
    - <<: *MingW-64bit
      env:
        BUILD_SHARED_LIBS=ON
        CMAKE_TOOLCHAIN_FILE=CMake/Toolchains/MinGW.cmake
        CMAKE_SYSTEM_PROCESSOR=x86_64
        URHO3D_RENDERER=D3D9
    - <<: *MingW-32bit
      env:
        BUILD_SHARED_LIBS=ON
        CMAKE_TOOLCHAIN_FILE=CMake/Toolchains/MinGW.cmake
        CMAKE_SYSTEM_PROCESSOR=i686
        URHO3D_RENDERER=D3D9
    - &MacOS-64bit
      os: osx
      osx_image: xcode8.3
      compiler: clang
    - <<: *MacOS-64bit
      env:
        BUILD_SHARED_LIBS=ON

script: |
  # Update CMake to 3.3 (minimum required version)
  cmake --version
  if [[ $TRAVIS_OS_NAME == 'linux' ]];
  then
      if [[ ! -f $HOME/cmake-3.3.2-Linux-x86_64/bin/cmake ]];
      then
          wget --no-check-certificate https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz -O $HOME/cmake.tar.gz && \
          tar xf $HOME/cmake.tar.gz -C $HOME && \
          rm $HOME/cmake.tar.gz
      fi
      export PATH=$HOME/cmake-3.3.2-Linux-x86_64/bin:$PATH
  fi
  mkdir build
  cd build
  cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} ..
  cmake --build .
